***use pipenv shell to run the virtual environment while inside backend

next step: 
-connect what has been done of the front-end to the back-end 
-write tests 
-development to production?

so far: 
-API requests are implemented
-Database is implemented
-Django cors-headers implemented and includes the react and the api 
-permission on the backend are that any authorized user can do get but only superusers can do delete and shit

will change: 
-view to get the data will need to be changed with the front end 


Django API in the backend. 
Backend and frontend are to seperate the two from the whole project file which is V1. .
Backendv1 is the project and data is the app

A Django app is is a self-contained module or component that encapsulates a specific functionality or set of related features within a Django project. It's a way to organize and modularize the codebase of a Django project.

#models.py 
-puts the parameters to save the data to the database

#admin.py
-can be used to insert data into the database before we implement the api to get it, we will first work on 
the post and delete

#settings
-add the app 
-add the framework 

#views.py 
-API GET Request is implemented
-API POST Request is implemented 
-API DELETE Request is implemented using the primary key 

**look into the DEFAULT_PAGINATION_CLASS

*security: 
Admin account will be made by superuser
Admin can make other accounts 
-signing in will be through React front end, this data will the be sent to django which will 
authenticate whether the username and password is for a superuser or other type of user. Only superusers
will be able to delete or edit data. 